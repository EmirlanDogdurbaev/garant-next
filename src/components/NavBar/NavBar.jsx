"use client";

import React, {useState, useEffect} from "react";
import {useDispatch, useSelector} from "react-redux";
import {useTranslation} from "react-i18next";
import Link from "next/link";
import i18n from "@/i18n";
import {
    fetchLanguages,
    setSelectedLanguage,
} from "@/store/slices/languages/languageSlice";
import Logo from "@/components/Logo/Logo";
import {useRouter} from "next/navigation";
import {
    fetchByAquaFilter,
    fetchByDistributivFilter,
    fetchByProducerFilter,
    fetchByProducerIsPainted, fetchByProducerIsStandart,
} from "@/store/slices/filter/search";
import classes from "./NavBar.module.scss";

const NavBar = () => {
    const dispatch = useDispatch();
    const {t} = useTranslation();
    const router = useRouter();

    const {languages, loading, error} = useSelector((state) => state.language);

    const [isMenuActive, setIsMenuActive] = useState(false);
    const [isDropdownOpen, setIsDropdownOpen] = useState(false);
    const [isLoggedIn, setIsLoggedIn] = useState(false);

    useEffect(() => {
        dispatch(fetchLanguages());
    }, [dispatch]);

    useEffect(() => {
        if (isMenuActive) {
            document.body.style.overflow = "hidden";
        } else {
            document.body.style.overflow = "";
        }
        return () => {
            document.body.style.overflow = "";
        };
    }, [isMenuActive]);

    useEffect(() => {
        if (typeof window !== "undefined") {
            const token = localStorage.getItem("token");
            setIsLoggedIn(!!token);
        }
    }, []);

    const handleSearchAndNavigate = (action, path) => {
        dispatch(action());
        router.push(path);
    };

    const handleLanguageChange = (lang) => {
        i18n.changeLanguage(lang);
        dispatch(setSelectedLanguage(lang));
    };

    const toggleMenu = () => {
        setIsMenuOpen((prev) => !prev);
    };

    const handleMouseEnter = () => {
        setIsDropdownOpen(true);
    };

    const handleMouseLeave = () => {
        setIsDropdownOpen(false);
    };

    if (loading) return <div>{t("loading.languages")}</div>;
    if (error)
        return (
            <div>
                {t("error.loading.languages")}: {error}
            </div>
        );

    const toggleMenuHandler = () => {
        setIsMenuActive((prevState) => !prevState);
    };

    return (
        <header className={classes.main}>
            <nav className={classes.navbar}>
                <Logo/>
                <div
                    className={`${classes.navbar__list} ${
                        isMenuActive ? classes.active : ""
                    }`}
                >
                    {isMenuActive ? (
                        <ul className={classes.modile}>
                            <li>
                                <button> {t("nav.production")}</button>
                            </li>
                            {" "}
                            <li>
                                <button
                                    onClick={() =>
                                        handleSearchAndNavigate(fetchByProducerIsStandart, "/catalog")
                                    }
                                >
                                    {t("nav.item1")}
                                </button>
                            </li>
                            <li>
                                <button
                                    onClick={() =>
                                        handleSearchAndNavigate(
                                            fetchByProducerIsPainted,
                                            "/catalog"
                                        )
                                    }
                                >
                                    {t("nav.item2")}
                                </button>
                            </li>
                            {" "}
                            <li>
                                <button
                                    onClick={() =>
                                        handleSearchAndNavigate(
                                            fetchByDistributivFilter,
                                            "/catalog"
                                        )
                                    }
                                >
                                 garant
                                </button>
                            </li>
                            <li>
                                <button className={classes.btn}
                                        onClick={() =>
                                            handleSearchAndNavigate(
                                                fetchByAquaFilter,
                                                "/catalog"
                                            )
                                        }
                                >
                                    <svg width="100" height="51" viewBox="0 0 1776 341" fill="none"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path
                                            d="M178.667 33.6C175.467 36.2667 162.933 60.1333 127.2 131.467C101.2 183.467 80 227.2 80 228.667C80 231.067 80.9333 231.333 91.3333 231.333H102.8L105.2 225.6C106.533 222.533 112.4 210.133 118.267 198C124.133 185.867 141.067 150.4 156 118.933C170.933 87.6 183.6 62.4 184.133 62.9333C187.733 67.0667 229.333 144.533 229.067 146.667C228.8 148.8 227.867 149.2 224 148.933C221.467 148.667 210.667 148.4 200 148.267C184.133 148 179.733 148.4 175.6 150.267C172 151.867 170.533 153.333 170.933 154.933C171.333 156.933 173.733 157.6 185.333 158.8C211.333 161.733 228 169.733 246.8 188.533C256.8 198.533 268.667 214.667 276.267 228.533L278.533 232.8L296.267 232.4C312.933 232 314 231.867 314.4 229.333C314.933 225.733 208 38.5333 202.667 33.6C199.2 30.5333 197.467 30 190.8 30C184.133 30 182.133 30.5333 178.667 33.6Z"
                                            fill="white"/>
                                        <path
                                            d="M993.067 38L977.333 46V119.333C977.333 189.2 977.467 192.933 980 199.6C983.867 209.733 991.467 219.2 1001.07 225.6C1013.87 234.133 1016.53 234.667 1052 234.667H1083.33V226.667L1064.67 225.867C1039.73 224.8 1029.2 221.733 1021.07 213.067C1013.87 205.467 1014 207.6 1013.33 116C1012.8 41.6 1012.4 30.6667 1010.67 30.4C1009.6 30.2667 1001.6 33.7333 993.067 38Z"
                                            fill="white"/>
                                        <path
                                            d="M406 91.8667C373.2 98.2667 351.867 114.933 344 140.533C340.4 151.867 340.133 171.867 343.333 182.933C352.8 215.6 386.4 235.333 432.4 235.333C444.8 235.333 464.533 232.133 474 228.533C485.733 224.133 485.2 222.4 485.6 269.867C486 309.6 486.133 310.667 488.667 310.933C490.133 311.067 498.267 307.733 506.667 303.6L522 296L522.4 224.933C522.667 158.533 522.533 153.2 520.133 143.867C513.867 119.2 495.6 102.4 466.4 93.8667C453.867 90.2667 420.133 89.0667 406 91.8667ZM446.667 100.133C470.933 107.333 483.333 128.8 483.2 163.333C483.2 180.533 481.067 189.733 474.267 202.4C464.8 220.4 444 230 423.2 226.133C403.467 222.533 390.267 210.533 383.2 190C379.467 179.2 379.6 146 383.333 134.667C388.667 118.133 401.6 104.533 415.867 100.133C424.133 97.4667 438 97.6 446.667 100.133Z"
                                            fill="white"/>
                                        <path
                                            d="M827.333 90.9333C780.4 98.4 753.6 131.2 760 173.467C764.4 203.333 786 224.933 818.667 232.267C834.267 235.867 864 235.467 879.2 231.467L890.933 228.4L899.6 236.8L935.333 236V190.667C935.333 146.8 935.2 145.067 932.267 137.333C924.133 115.733 907.467 101.467 880.933 93.8667C873.6 91.7333 866.667 90.9333 851.333 90.6667C840.4 90.4 829.6 90.5333 827.333 90.9333ZM866.933 102.4C885.733 111.6 895.867 132.4 896 162.133C896 192.533 886.267 212.8 866.933 222.267C859.067 226.133 856.8 226.667 847.333 226.667C832.933 226.533 824.533 223.467 815.333 215.2C804.133 204.8 798.133 190.4 796.533 169.333C795.067 150.4 799.2 131.867 807.867 118.4C816.933 104.4 830.667 97.6 848.8 98.4C857.2 98.8 861.2 99.6 866.933 102.4Z"
                                            fill="white"/>
                                        <path
                                            d="M1578 91.3333C1555.73 94.8 1536.67 104 1524.13 117.333C1512.27 130.133 1506.67 144.667 1506.67 162.267C1506.67 196.533 1528.13 222 1566.27 232.933C1574.8 235.467 1580 236 1595.33 236C1612.27 236 1615.07 235.6 1625.47 232.267C1638.13 228.133 1649.73 221.333 1650.4 217.6C1651.07 214.4 1648.53 214.667 1636.4 218.933C1627.33 222.133 1623.87 222.533 1610 222.667C1595.2 222.667 1593.47 222.4 1586.53 218.933C1578.13 214.8 1568.4 205.2 1564 196.8C1551.33 171.733 1554.53 136.667 1571.47 115.733C1574.4 112.133 1579.33 108.533 1585.07 105.733C1593.33 101.6 1594.93 101.333 1607.33 101.333C1618.4 101.333 1621.73 101.867 1627.33 104.4C1640.13 110.267 1648.67 121.2 1653.33 138.133C1656.27 149.067 1655.87 152.667 1651.6 152.667C1650 152.8 1638.4 152.667 1626 152.667C1607.87 152.533 1602.8 152.933 1600.67 154.533C1598.53 156.133 1598.27 156.933 1599.47 158.933C1600.8 161.2 1604 161.333 1648.13 161.333H1695.33L1695.73 156C1696.4 148.667 1693.73 137.467 1689.2 128.4C1681.07 112.133 1663.87 99.8667 1640.67 93.8667C1628.53 90.6667 1592 89.2 1578 91.3333Z"
                                            fill="white"/>
                                        <path
                                            d="M567.6 93.6C567.067 94 566.667 115.333 566.667 140.8C566.667 181.867 566.933 188 569.067 194.933C574.667 212.933 586.267 224.4 604 229.733C631.2 238 672.4 236.533 694.667 226.533C708.4 220.4 719.2 206 722.667 189.333C723.467 185.333 723.867 165.067 723.733 138L723.333 93.3333L706.133 92.9333C693.2 92.6667 688.667 93.0667 687.733 94.2667C687.2 95.2 686.667 117.333 686.667 143.333C686.667 181.467 686.267 192.4 684.667 198.667C681.733 210.133 676.8 216.533 667.6 221.2C660.667 224.667 658.4 225.067 646.933 225.2C639.6 225.333 631.333 224.533 627.733 223.467C619.333 221.067 611.733 214.267 607.867 205.733C604.667 198.667 604.667 198.267 604.267 147.333C604 113.333 603.333 95.6 602.4 94.4C601.467 93.2 596.4 92.6667 584.667 92.6667C575.733 92.6667 568 93.0667 567.6 93.6Z"
                                            fill="white"/>
                                        <path
                                            d="M1106.93 94.2667C1104.93 96.2667 1104.67 168.933 1106.67 184.267C1110.13 210.267 1125.33 226.267 1152.4 232.267C1166 235.333 1203.73 235.333 1217.33 232.267C1242.67 226.533 1256.8 213.467 1262 190.8C1263.6 183.733 1264 173.467 1263.73 137.733L1263.33 93.3333H1227.33L1226.53 143.333C1226.13 173.2 1225.33 194.933 1224.4 197.333C1221.47 205.733 1217.2 212.667 1212.93 215.867C1202 224.267 1176.13 225.6 1161.87 218.667C1153.73 214.667 1150.27 210.533 1146.27 199.6C1143.6 192.533 1143.33 188.667 1142.67 142.667L1142 93.3333L1125.33 92.9333C1113.47 92.6667 1108.13 93.0667 1106.93 94.2667Z"
                                            fill="white"/>
                                        <path
                                            d="M1312.4 94.9333C1311.73 96.6667 1318.8 104.133 1341.2 126C1360.53 144.667 1370.8 155.467 1370.53 156.933C1370.27 158.133 1355.87 174 1338.53 192.267C1321.33 210.4 1306.67 226.133 1306.13 227.067C1305.6 228 1305.87 229.6 1306.67 230.667C1308 232.267 1312.67 232.667 1330.67 232.667H1352.93L1362 222.933C1385.2 198.533 1399.2 184.667 1400.8 184.667C1401.87 184.667 1413.87 195.467 1427.6 208.667L1452.67 232.667H1462.8C1473.33 232.667 1477.47 230.8 1475.07 227.067C1474.53 226.133 1460.93 212.8 1444.93 197.467C1428.93 182.133 1416 168.8 1416.27 167.733C1416.53 166.8 1431.07 150.933 1448.67 132.4C1469.6 110.533 1480.67 98 1480.67 96.1333C1480.67 93.4667 1480 93.3333 1456.67 93.0667L1432.67 92.6667L1410.27 116.667C1398 129.867 1387.2 140.667 1386.27 140.667C1385.33 140.667 1373.33 129.867 1359.33 116.667L1334 92.8L1323.6 92.6667C1315.07 92.6667 1313.07 93.0667 1312.4 94.9333Z"
                                            fill="white"/>
                                    </svg>

                                </button>
                            </li>

                            <li>
                                <button>
                                    <svg
                                        width="26"
                                        height="26"
                                        viewBox="0 0 26 26"
                                        fill="white"
                                        xmlns="http://www.w3.org/2000/svg"
                                    >
                                        <path
                                            d="M13 22.75C11.6581 22.75 10.3942 22.4936 9.20834 21.9808C8.02245 21.4673 6.98967 20.7704 6.11001 19.89C5.23034 19.0096 4.53339 17.9768 4.01917 16.7917C3.50495 15.6065 3.24856 14.3426 3.25001 13C3.25001 11.6538 3.50639 10.3888 4.01917 9.20508C4.53267 8.02064 5.22962 6.98894 6.11001 6.11C6.99039 5.23106 8.02317 4.53411 9.20834 4.01917C10.3942 3.50639 11.6581 3.25 13 3.25C14.3462 3.25 15.6112 3.50639 16.7949 4.01917C17.9794 4.53267 19.0114 5.22961 19.8911 6.11C20.7708 6.99039 21.4673 8.02208 21.9808 9.20508C22.4936 10.3895 22.75 11.6545 22.75 13C22.75 14.3419 22.4936 15.6058 21.9808 16.7917C21.4673 17.9776 20.7704 19.0103 19.89 19.89C19.0096 20.7697 17.9779 21.4666 16.7949 21.9808C15.6119 22.4951 14.3469 22.7514 13 22.75ZM13 21.6753C13.6356 20.8585 14.1599 20.0565 14.573 19.2692C14.9854 18.482 15.3209 17.6009 15.5794 16.6259H10.4206C10.7073 17.6558 11.0496 18.5644 11.4476 19.3516C11.8463 20.1388 12.3637 20.9134 13 21.6753ZM11.6209 21.5128C11.1154 20.917 10.6539 20.1803 10.2364 19.3028C9.81898 18.4261 9.50842 17.5334 9.30476 16.6248H5.15017C5.77128 17.9718 6.65131 19.0768 7.79026 19.9398C8.92992 20.8022 10.2068 21.3265 11.6209 21.5128ZM14.3791 21.5128C15.7932 21.3265 17.0701 20.8022 18.2098 19.9398C19.3487 19.0768 20.2287 17.9718 20.8498 16.6248H16.6963C16.4219 17.5471 16.0763 18.4466 15.6596 19.3234C15.2421 20.2009 14.8153 20.9314 14.3791 21.5128ZM4.70817 15.5426H9.07942C8.99709 15.0977 8.93931 14.6644 8.90609 14.2426C8.87142 13.8215 8.85409 13.4073 8.85409 13C8.85409 12.5927 8.87106 12.1785 8.90501 11.7574C8.93895 11.3364 8.99673 10.903 9.07834 10.4574H4.70926C4.59153 10.833 4.49945 11.2421 4.43301 11.6848C4.36656 12.1268 4.33334 12.5652 4.33334 13C4.33334 13.4348 4.3662 13.8735 4.43192 14.3162C4.49764 14.759 4.58973 15.1674 4.70817 15.5415M10.1628 15.5415H15.8373C15.9196 15.0973 15.9774 14.6712 16.0106 14.2632C16.0453 13.8558 16.0626 13.4348 16.0626 13C16.0626 12.5652 16.0456 12.1442 16.0117 11.7368C15.9777 11.3295 15.9199 10.9034 15.8383 10.4585H10.1617C10.0801 10.9027 10.0223 11.3288 9.98834 11.7368C9.95439 12.1442 9.93742 12.5652 9.93742 13C9.93742 13.4348 9.95439 13.8558 9.98834 14.2632C10.0223 14.6705 10.0811 15.0966 10.1628 15.5415ZM16.9217 15.5415H21.2918C21.4096 15.1667 21.5016 14.7582 21.5681 14.3162C21.6338 13.8735 21.6667 13.4348 21.6667 13C21.6667 12.5652 21.6338 12.1265 21.5681 11.6837C21.5024 11.241 21.4103 10.8326 21.2918 10.4585H16.9206C17.0029 10.9027 17.0607 11.3356 17.0939 11.7574C17.1286 12.1792 17.1459 12.5934 17.1459 13C17.1459 13.4066 17.1289 13.8208 17.095 14.2426C17.0611 14.6644 17.0033 15.0977 16.9217 15.5426M16.6963 9.37517H20.8498C20.215 8.00006 19.3454 6.89506 18.2412 6.06017C17.1369 5.22528 15.8495 4.69408 14.3791 4.46658C14.8846 5.13175 15.3393 5.89261 15.743 6.74917C16.1467 7.605 16.4645 8.48033 16.6963 9.37517ZM10.4206 9.37517H15.5794C15.2934 8.35828 14.9406 7.43889 14.521 6.617C14.1014 5.79511 13.5944 5.031 13 4.32467C12.4056 5.03028 11.8986 5.79439 11.479 6.617C11.0594 7.43961 10.7059 8.359 10.4206 9.37517ZM5.15126 9.37517H9.30476C9.53659 8.48106 9.85437 7.60572 10.2581 6.74917C10.6618 5.89261 11.1164 5.13175 11.622 4.46658C10.1386 4.69481 8.84795 5.22925 7.75017 6.06992C6.65239 6.91203 5.78573 8.01342 5.15017 9.37408"
                                            fill="#fff"
                                        />
                                    </svg>
                                    {i18n.language.toUpperCase()}</button>
                            </li>
                            <li>
                                {" "}
                                {languages?.map((language) => (
                                    <button
                                        key={language.code}
                                        onClick={() => handleLanguageChange(language.code)}
                                    >
                                        {language.name}
                                    </button>
                                ))}
                            </li>
                        </ul>
                    ) : (
                        <>
                            <div className={classes.languageSelector}>
                                <Link href={"/catalog"} style={{color: "white"}}>
                                    {t("nav.production")}
                                </Link>
                                <div className={classes.dropdownMenu}>
                                    <div className={`${classes.inner} ${classes.custom}`}>
                                        <div
                                            onClick={() =>
                                                handleSearchAndNavigate(
                                                    fetchByProducerIsStandart,
                                                    "/catalog"
                                                )
                                            }
                                        >
                                            {t("nav.item1")}
                                        </div>
                                        <div
                                            onClick={() =>
                                                handleSearchAndNavigate(
                                                    fetchByProducerIsPainted,
                                                    "/catalog"
                                                )
                                            }
                                        >
                                            {t("nav.item2")}
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div className={`${classes.inner2} ${classes.custom}`}>
                                <div
                                    onClick={() =>
                                        handleSearchAndNavigate(fetchByProducerFilter, "/catalog")
                                    }
                                >
                                    {t("nav.item1")}
                                </div>
                                <div
                                    onClick={() =>
                                        handleSearchAndNavigate(
                                            fetchByProducerIsPainted,
                                            "/catalog"
                                        )
                                    }
                                >
                                    {t("nav.item2")}
                                </div>
                            </div>
                            <div
                                className={`${classes.navbar__link} ${classes.languageSelector}`}
                                onClick={() =>
                                    handleSearchAndNavigate(fetchByDistributivFilter, "/catalog")
                                }
                            >
                             garant
                            </div>

                            <li className={classes.navbar__item}>
                                <button className={`${classes.navbar__link} ${classes.languageSelector} ${classes.btn}`}
                                        onClick={() =>
                                            handleSearchAndNavigate(
                                                fetchByAquaFilter,
                                                "/catalog"
                                            )
                                        }>
                                    <svg width="100" height="51" viewBox="0 0 1776 341" fill="none"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path
                                            d="M178.667 33.6C175.467 36.2667 162.933 60.1333 127.2 131.467C101.2 183.467 80 227.2 80 228.667C80 231.067 80.9333 231.333 91.3333 231.333H102.8L105.2 225.6C106.533 222.533 112.4 210.133 118.267 198C124.133 185.867 141.067 150.4 156 118.933C170.933 87.6 183.6 62.4 184.133 62.9333C187.733 67.0667 229.333 144.533 229.067 146.667C228.8 148.8 227.867 149.2 224 148.933C221.467 148.667 210.667 148.4 200 148.267C184.133 148 179.733 148.4 175.6 150.267C172 151.867 170.533 153.333 170.933 154.933C171.333 156.933 173.733 157.6 185.333 158.8C211.333 161.733 228 169.733 246.8 188.533C256.8 198.533 268.667 214.667 276.267 228.533L278.533 232.8L296.267 232.4C312.933 232 314 231.867 314.4 229.333C314.933 225.733 208 38.5333 202.667 33.6C199.2 30.5333 197.467 30 190.8 30C184.133 30 182.133 30.5333 178.667 33.6Z"
                                            fill="white"/>
                                        <path
                                            d="M993.067 38L977.333 46V119.333C977.333 189.2 977.467 192.933 980 199.6C983.867 209.733 991.467 219.2 1001.07 225.6C1013.87 234.133 1016.53 234.667 1052 234.667H1083.33V226.667L1064.67 225.867C1039.73 224.8 1029.2 221.733 1021.07 213.067C1013.87 205.467 1014 207.6 1013.33 116C1012.8 41.6 1012.4 30.6667 1010.67 30.4C1009.6 30.2667 1001.6 33.7333 993.067 38Z"
                                            fill="white"/>
                                        <path
                                            d="M406 91.8667C373.2 98.2667 351.867 114.933 344 140.533C340.4 151.867 340.133 171.867 343.333 182.933C352.8 215.6 386.4 235.333 432.4 235.333C444.8 235.333 464.533 232.133 474 228.533C485.733 224.133 485.2 222.4 485.6 269.867C486 309.6 486.133 310.667 488.667 310.933C490.133 311.067 498.267 307.733 506.667 303.6L522 296L522.4 224.933C522.667 158.533 522.533 153.2 520.133 143.867C513.867 119.2 495.6 102.4 466.4 93.8667C453.867 90.2667 420.133 89.0667 406 91.8667ZM446.667 100.133C470.933 107.333 483.333 128.8 483.2 163.333C483.2 180.533 481.067 189.733 474.267 202.4C464.8 220.4 444 230 423.2 226.133C403.467 222.533 390.267 210.533 383.2 190C379.467 179.2 379.6 146 383.333 134.667C388.667 118.133 401.6 104.533 415.867 100.133C424.133 97.4667 438 97.6 446.667 100.133Z"
                                            fill="white"/>
                                        <path
                                            d="M827.333 90.9333C780.4 98.4 753.6 131.2 760 173.467C764.4 203.333 786 224.933 818.667 232.267C834.267 235.867 864 235.467 879.2 231.467L890.933 228.4L899.6 236.8L935.333 236V190.667C935.333 146.8 935.2 145.067 932.267 137.333C924.133 115.733 907.467 101.467 880.933 93.8667C873.6 91.7333 866.667 90.9333 851.333 90.6667C840.4 90.4 829.6 90.5333 827.333 90.9333ZM866.933 102.4C885.733 111.6 895.867 132.4 896 162.133C896 192.533 886.267 212.8 866.933 222.267C859.067 226.133 856.8 226.667 847.333 226.667C832.933 226.533 824.533 223.467 815.333 215.2C804.133 204.8 798.133 190.4 796.533 169.333C795.067 150.4 799.2 131.867 807.867 118.4C816.933 104.4 830.667 97.6 848.8 98.4C857.2 98.8 861.2 99.6 866.933 102.4Z"
                                            fill="white"/>
                                        <path
                                            d="M1578 91.3333C1555.73 94.8 1536.67 104 1524.13 117.333C1512.27 130.133 1506.67 144.667 1506.67 162.267C1506.67 196.533 1528.13 222 1566.27 232.933C1574.8 235.467 1580 236 1595.33 236C1612.27 236 1615.07 235.6 1625.47 232.267C1638.13 228.133 1649.73 221.333 1650.4 217.6C1651.07 214.4 1648.53 214.667 1636.4 218.933C1627.33 222.133 1623.87 222.533 1610 222.667C1595.2 222.667 1593.47 222.4 1586.53 218.933C1578.13 214.8 1568.4 205.2 1564 196.8C1551.33 171.733 1554.53 136.667 1571.47 115.733C1574.4 112.133 1579.33 108.533 1585.07 105.733C1593.33 101.6 1594.93 101.333 1607.33 101.333C1618.4 101.333 1621.73 101.867 1627.33 104.4C1640.13 110.267 1648.67 121.2 1653.33 138.133C1656.27 149.067 1655.87 152.667 1651.6 152.667C1650 152.8 1638.4 152.667 1626 152.667C1607.87 152.533 1602.8 152.933 1600.67 154.533C1598.53 156.133 1598.27 156.933 1599.47 158.933C1600.8 161.2 1604 161.333 1648.13 161.333H1695.33L1695.73 156C1696.4 148.667 1693.73 137.467 1689.2 128.4C1681.07 112.133 1663.87 99.8667 1640.67 93.8667C1628.53 90.6667 1592 89.2 1578 91.3333Z"
                                            fill="white"/>
                                        <path
                                            d="M567.6 93.6C567.067 94 566.667 115.333 566.667 140.8C566.667 181.867 566.933 188 569.067 194.933C574.667 212.933 586.267 224.4 604 229.733C631.2 238 672.4 236.533 694.667 226.533C708.4 220.4 719.2 206 722.667 189.333C723.467 185.333 723.867 165.067 723.733 138L723.333 93.3333L706.133 92.9333C693.2 92.6667 688.667 93.0667 687.733 94.2667C687.2 95.2 686.667 117.333 686.667 143.333C686.667 181.467 686.267 192.4 684.667 198.667C681.733 210.133 676.8 216.533 667.6 221.2C660.667 224.667 658.4 225.067 646.933 225.2C639.6 225.333 631.333 224.533 627.733 223.467C619.333 221.067 611.733 214.267 607.867 205.733C604.667 198.667 604.667 198.267 604.267 147.333C604 113.333 603.333 95.6 602.4 94.4C601.467 93.2 596.4 92.6667 584.667 92.6667C575.733 92.6667 568 93.0667 567.6 93.6Z"
                                            fill="white"/>
                                        <path
                                            d="M1106.93 94.2667C1104.93 96.2667 1104.67 168.933 1106.67 184.267C1110.13 210.267 1125.33 226.267 1152.4 232.267C1166 235.333 1203.73 235.333 1217.33 232.267C1242.67 226.533 1256.8 213.467 1262 190.8C1263.6 183.733 1264 173.467 1263.73 137.733L1263.33 93.3333H1227.33L1226.53 143.333C1226.13 173.2 1225.33 194.933 1224.4 197.333C1221.47 205.733 1217.2 212.667 1212.93 215.867C1202 224.267 1176.13 225.6 1161.87 218.667C1153.73 214.667 1150.27 210.533 1146.27 199.6C1143.6 192.533 1143.33 188.667 1142.67 142.667L1142 93.3333L1125.33 92.9333C1113.47 92.6667 1108.13 93.0667 1106.93 94.2667Z"
                                            fill="white"/>
                                        <path
                                            d="M1312.4 94.9333C1311.73 96.6667 1318.8 104.133 1341.2 126C1360.53 144.667 1370.8 155.467 1370.53 156.933C1370.27 158.133 1355.87 174 1338.53 192.267C1321.33 210.4 1306.67 226.133 1306.13 227.067C1305.6 228 1305.87 229.6 1306.67 230.667C1308 232.267 1312.67 232.667 1330.67 232.667H1352.93L1362 222.933C1385.2 198.533 1399.2 184.667 1400.8 184.667C1401.87 184.667 1413.87 195.467 1427.6 208.667L1452.67 232.667H1462.8C1473.33 232.667 1477.47 230.8 1475.07 227.067C1474.53 226.133 1460.93 212.8 1444.93 197.467C1428.93 182.133 1416 168.8 1416.27 167.733C1416.53 166.8 1431.07 150.933 1448.67 132.4C1469.6 110.533 1480.67 98 1480.67 96.1333C1480.67 93.4667 1480 93.3333 1456.67 93.0667L1432.67 92.6667L1410.27 116.667C1398 129.867 1387.2 140.667 1386.27 140.667C1385.33 140.667 1373.33 129.867 1359.33 116.667L1334 92.8L1323.6 92.6667C1315.07 92.6667 1313.07 93.0667 1312.4 94.9333Z"
                                            fill="white"/>
                                    </svg>

                                </button>
                            </li>

                            <div className={classes.languageSelector}>
                <span
                    style={{display: "flex", alignItems: "center", gap: "5px"}}
                >
                  <svg
                      width="26"
                      height="26"
                      viewBox="0 0 26 26"
                      fill="white"
                      xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                        d="M13 22.75C11.6581 22.75 10.3942 22.4936 9.20834 21.9808C8.02245 21.4673 6.98967 20.7704 6.11001 19.89C5.23034 19.0096 4.53339 17.9768 4.01917 16.7917C3.50495 15.6065 3.24856 14.3426 3.25001 13C3.25001 11.6538 3.50639 10.3888 4.01917 9.20508C4.53267 8.02064 5.22962 6.98894 6.11001 6.11C6.99039 5.23106 8.02317 4.53411 9.20834 4.01917C10.3942 3.50639 11.6581 3.25 13 3.25C14.3462 3.25 15.6112 3.50639 16.7949 4.01917C17.9794 4.53267 19.0114 5.22961 19.8911 6.11C20.7708 6.99039 21.4673 8.02208 21.9808 9.20508C22.4936 10.3895 22.75 11.6545 22.75 13C22.75 14.3419 22.4936 15.6058 21.9808 16.7917C21.4673 17.9776 20.7704 19.0103 19.89 19.89C19.0096 20.7697 17.9779 21.4666 16.7949 21.9808C15.6119 22.4951 14.3469 22.7514 13 22.75ZM13 21.6753C13.6356 20.8585 14.1599 20.0565 14.573 19.2692C14.9854 18.482 15.3209 17.6009 15.5794 16.6259H10.4206C10.7073 17.6558 11.0496 18.5644 11.4476 19.3516C11.8463 20.1388 12.3637 20.9134 13 21.6753ZM11.6209 21.5128C11.1154 20.917 10.6539 20.1803 10.2364 19.3028C9.81898 18.4261 9.50842 17.5334 9.30476 16.6248H5.15017C5.77128 17.9718 6.65131 19.0768 7.79026 19.9398C8.92992 20.8022 10.2068 21.3265 11.6209 21.5128ZM14.3791 21.5128C15.7932 21.3265 17.0701 20.8022 18.2098 19.9398C19.3487 19.0768 20.2287 17.9718 20.8498 16.6248H16.6963C16.4219 17.5471 16.0763 18.4466 15.6596 19.3234C15.2421 20.2009 14.8153 20.9314 14.3791 21.5128ZM4.70817 15.5426H9.07942C8.99709 15.0977 8.93931 14.6644 8.90609 14.2426C8.87142 13.8215 8.85409 13.4073 8.85409 13C8.85409 12.5927 8.87106 12.1785 8.90501 11.7574C8.93895 11.3364 8.99673 10.903 9.07834 10.4574H4.70926C4.59153 10.833 4.49945 11.2421 4.43301 11.6848C4.36656 12.1268 4.33334 12.5652 4.33334 13C4.33334 13.4348 4.3662 13.8735 4.43192 14.3162C4.49764 14.759 4.58973 15.1674 4.70817 15.5415M10.1628 15.5415H15.8373C15.9196 15.0973 15.9774 14.6712 16.0106 14.2632C16.0453 13.8558 16.0626 13.4348 16.0626 13C16.0626 12.5652 16.0456 12.1442 16.0117 11.7368C15.9777 11.3295 15.9199 10.9034 15.8383 10.4585H10.1617C10.0801 10.9027 10.0223 11.3288 9.98834 11.7368C9.95439 12.1442 9.93742 12.5652 9.93742 13C9.93742 13.4348 9.95439 13.8558 9.98834 14.2632C10.0223 14.6705 10.0811 15.0966 10.1628 15.5415ZM16.9217 15.5415H21.2918C21.4096 15.1667 21.5016 14.7582 21.5681 14.3162C21.6338 13.8735 21.6667 13.4348 21.6667 13C21.6667 12.5652 21.6338 12.1265 21.5681 11.6837C21.5024 11.241 21.4103 10.8326 21.2918 10.4585H16.9206C17.0029 10.9027 17.0607 11.3356 17.0939 11.7574C17.1286 12.1792 17.1459 12.5934 17.1459 13C17.1459 13.4066 17.1289 13.8208 17.095 14.2426C17.0611 14.6644 17.0033 15.0977 16.9217 15.5426M16.6963 9.37517H20.8498C20.215 8.00006 19.3454 6.89506 18.2412 6.06017C17.1369 5.22528 15.8495 4.69408 14.3791 4.46658C14.8846 5.13175 15.3393 5.89261 15.743 6.74917C16.1467 7.605 16.4645 8.48033 16.6963 9.37517ZM10.4206 9.37517H15.5794C15.2934 8.35828 14.9406 7.43889 14.521 6.617C14.1014 5.79511 13.5944 5.031 13 4.32467C12.4056 5.03028 11.8986 5.79439 11.479 6.617C11.0594 7.43961 10.7059 8.359 10.4206 9.37517ZM5.15126 9.37517H9.30476C9.53659 8.48106 9.85437 7.60572 10.2581 6.74917C10.6618 5.89261 11.1164 5.13175 11.622 4.46658C10.1386 4.69481 8.84795 5.22925 7.75017 6.06992C6.65239 6.91203 5.78573 8.01342 5.15017 9.37408"
                        fill="#fff"
                    />
                  </svg>

                    {i18n.language.toUpperCase()}
                </span>
                                <div className={classes.dropdownMenu}>
                                    <div className={classes.inner}>
                                        {languages?.map((language) => (
                                            <div
                                                key={language.code}
                                                onClick={() => handleLanguageChange(language.code)}
                                            >
                                                {language.name}
                                            </div>
                                        ))}
                                    </div>
                                </div>
                                <div className={classes.inner2}>
                                    {languages?.map((language) => (
                                        <div
                                            key={language.code}
                                            onClick={() => handleLanguageChange(language.code)}
                                        >
                                            {language.name}
                                        </div>
                                    ))}
                                </div>
                            </div>
                        </>
                    )}
                </div>

                <button className={classes.navbar__menu} onClick={toggleMenuHandler}>
                    {isMenuActive ? (
                        <svg
                            width="40"
                            height="40"
                            viewBox="0 0 26 26"
                            fill="none"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                d="M7.69629 18.3028L18.3038 7.69531M18.3038 18.3028L7.69629 7.69531"
                                stroke="#fff"
                                strokeWidth="1.5"
                                strokeMiterlimit="10"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                            />
                        </svg>
                    ) : (
                        <svg
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="white"
                            xmlns="http://www.w3.org/2000/svg"
                        >
                            <path
                                d="M4 6H20M4 12H20M4 18H20"
                                stroke="#fff"
                                strokeWidth="2"
                                strokeLinecap="round"
                                strokeLinejoin="round"
                            />
                            {" "}
                        </svg>
                    )}
                </button>
            </nav>
        </header>
    );
};

export default NavBar;
